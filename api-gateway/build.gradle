
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.morning'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.2'


	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.2'


	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


//task customFatJar(type: Jar) {
//	manifest {
//		attributes 'Main-Class': 'com.morning.apigateway.ApiGatewayApplication'
//	}
//	archiveBaseName = project.name
//	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//	with jar
//}
//jar {
//	manifest {
//		attributes "Main-Class": "com.morning.apigateway.ApiGatewayApplication"
//	}
//
//	from {
//		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//	}
//}


